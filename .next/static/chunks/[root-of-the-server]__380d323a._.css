/* [project]/src/app/global.css [app-client] (css) */
@layer properties {
  @supports (((-webkit-hyphens: none)) and (not (margin-trim: inline))) or ((-moz-orient: inline) and (not (color: rgb(from red r g b)))) {
    *, :before, :after, ::backdrop {
      --tw-border-style: solid;
      --tw-translate-x: 0;
      --tw-translate-y: 0;
      --tw-translate-z: 0;
      --tw-scale-x: 1;
      --tw-scale-y: 1;
      --tw-scale-z: 1;
      --tw-rotate-x: initial;
      --tw-rotate-y: initial;
      --tw-rotate-z: initial;
      --tw-skew-x: initial;
      --tw-skew-y: initial;
      --tw-space-x-reverse: 0;
      --tw-divide-y-reverse: 0;
      --tw-font-weight: initial;
      --tw-shadow: 0 0 #0000;
      --tw-shadow-color: initial;
      --tw-shadow-alpha: 100%;
      --tw-inset-shadow: 0 0 #0000;
      --tw-inset-shadow-color: initial;
      --tw-inset-shadow-alpha: 100%;
      --tw-ring-color: initial;
      --tw-ring-shadow: 0 0 #0000;
      --tw-inset-ring-color: initial;
      --tw-inset-ring-shadow: 0 0 #0000;
      --tw-ring-inset: initial;
      --tw-ring-offset-width: 0px;
      --tw-ring-offset-color: #fff;
      --tw-ring-offset-shadow: 0 0 #0000;
      --tw-outline-style: solid;
      --tw-blur: initial;
      --tw-brightness: initial;
      --tw-contrast: initial;
      --tw-grayscale: initial;
      --tw-hue-rotate: initial;
      --tw-invert: initial;
      --tw-opacity: initial;
      --tw-saturate: initial;
      --tw-sepia: initial;
      --tw-drop-shadow: initial;
      --tw-drop-shadow-color: initial;
      --tw-drop-shadow-alpha: 100%;
      --tw-drop-shadow-size: initial;
      --tw-backdrop-blur: initial;
      --tw-backdrop-brightness: initial;
      --tw-backdrop-contrast: initial;
      --tw-backdrop-grayscale: initial;
      --tw-backdrop-hue-rotate: initial;
      --tw-backdrop-invert: initial;
      --tw-backdrop-opacity: initial;
      --tw-backdrop-saturate: initial;
      --tw-backdrop-sepia: initial;
      --tw-duration: initial;
      --tw-ease: initial;
      --radix-collapsible-content-height: 0px;
    }
  }
}

@layer theme {
  :root, :host {
    --font-sans: ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji";
    --font-mono: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    --color-red-500: oklch(63.7% .237 25.331);
    --color-orange-500: oklch(70.5% .213 47.604);
    --color-sky-500: oklch(68.5% .169 237.323);
    --color-sky-600: oklch(58.8% .158 241.966);
    --color-sky-700: oklch(50% .134 242.749);
    --color-blue-500: oklch(62.3% .214 259.815);
    --color-indigo-600: oklch(51.1% .262 276.966);
    --color-gray-300: oklch(87.2% .01 258.338);
    --color-gray-950: oklch(13% .028 261.692);
    --color-neutral-200: oklch(92.2% 0 0);
    --color-black: #000;
    --color-white: #fff;
    --spacing: .25rem;
    --breakpoint-sm: 40rem;
    --container-sm: 24rem;
    --container-2xl: 42rem;
    --container-4xl: 56rem;
    --container-7xl: 80rem;
    --text-xs: .75rem;
    --text-xs--line-height: calc(1 / .75);
    --text-sm: .875rem;
    --text-sm--line-height: calc(1.25 / .875);
    --text-base: 1rem;
    --text-base--line-height: calc(1.5 / 1);
    --text-lg: 1.125rem;
    --text-lg--line-height: calc(1.75 / 1.125);
    --text-xl: 1.25rem;
    --text-xl--line-height: calc(1.75 / 1.25);
    --text-2xl: 1.5rem;
    --text-2xl--line-height: calc(2 / 1.5);
    --text-3xl: 1.875rem;
    --text-3xl--line-height: calc(2.25 / 1.875);
    --text-4xl: 2.25rem;
    --text-4xl--line-height: calc(2.5 / 2.25);
    --text-5xl: 3rem;
    --text-5xl--line-height: 1;
    --text-6xl: 3.75rem;
    --text-6xl--line-height: 1;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --radius-xs: .125rem;
    --radius-sm: .25rem;
    --radius-md: .375rem;
    --radius-lg: .5rem;
    --radius-xl: .75rem;
    --radius-2xl: 1rem;
    --radius-3xl: 1.5rem;
    --ease-in-out: cubic-bezier(.4, 0, .2, 1);
    --animate-spin: spin 1s linear infinite;
    --animate-pulse: pulse 2s cubic-bezier(.4, 0, .6, 1) infinite;
    --blur-sm: 8px;
    --blur-md: 12px;
    --blur-lg: 16px;
    --default-transition-duration: .15s;
    --default-transition-timing-function: cubic-bezier(.4, 0, .2, 1);
    --default-font-family: var(--font-sans);
    --default-mono-font-family: var(--font-mono);
    --color-fd-background: var(--background);
    --color-fd-foreground: var(--foreground);
    --color-fd-muted: var(--muted);
    --color-fd-muted-foreground: var(--muted-foreground);
    --color-fd-popover: var(--popover);
    --color-fd-popover-foreground: var(--popover-foreground);
    --color-fd-card: var(--card);
    --color-fd-card-foreground: var(--card-foreground);
    --color-fd-border: var(--border);
    --color-fd-primary: var(--primary);
    --color-fd-primary-foreground: var(--primary-foreground);
    --color-fd-secondary: var(--secondary);
    --color-fd-secondary-foreground: var(--secondary-foreground);
    --color-fd-accent: var(--accent);
    --color-fd-accent-foreground: var(--accent-foreground);
    --spacing-fd-container: 1400px;
    --fd-sidebar-width: 0px;
    --fd-toc-width: 0px;
    --fd-layout-width: 100vw;
    --fd-banner-height: 0px;
    --fd-nav-height: 0px;
    --fd-tocnav-height: 0px;
    --color-fd-diff-remove: #c80a641f;
    --color-fd-diff-remove-symbol: #e60a64;
    --color-fd-diff-add: #0eb4641f;
    --color-fd-diff-add-symbol: #0ac864;
    --animate-fd-fade-in: fd-fade-in .3s ease;
    --animate-fd-fade-out: fd-fade-out .3s ease;
    --animate-fd-dialog-in: fd-dialog-in .2s cubic-bezier(.32, .72, 0, 1);
    --animate-fd-dialog-out: fd-dialog-out .3s cubic-bezier(.32, .72, 0, 1);
    --animate-fd-popover-in: fd-popover-in .15s ease;
    --animate-fd-popover-out: fd-popover-out .15s ease;
    --animate-fd-collapsible-down: fd-collapsible-down .15s ease-out;
    --animate-fd-collapsible-up: fd-collapsible-up .15s ease-out;
    --animate-fd-accordion-down: fd-accordion-down .2s ease-out;
    --animate-fd-accordion-up: fd-accordion-up .2s ease-out;
    --animate-fd-nav-menu-in: fd-nav-menu-in .2s ease;
    --animate-fd-nav-menu-out: fd-nav-menu-out .2s ease;
    --animate-fd-enterFromLeft: fd-enterFromLeft .25s ease;
    --animate-fd-enterFromRight: fd-enterFromRight .25s ease;
    --animate-fd-exitToLeft: fd-exitToLeft .25s ease;
    --animate-fd-exitToRight: fd-exitToRight .25s ease;
  }
}

@layer base {
  *, :after, :before, ::backdrop, ::file-selector-button {
    box-sizing: border-box;
    border: 0 solid;
    margin: 0;
    padding: 0;
  }

  html, :host {
    -webkit-text-size-adjust: 100%;
    tab-size: 4;
    line-height: 1.5;
    font-family: var(--default-font-family, ui-sans-serif, system-ui, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol", "Noto Color Emoji");
    font-feature-settings: var(--default-font-feature-settings, normal);
    font-variation-settings: var(--default-font-variation-settings, normal);
    -webkit-tap-highlight-color: transparent;
  }

  hr {
    height: 0;
    color: inherit;
    border-top-width: 1px;
  }

  abbr:where([title]) {
    text-decoration: underline dotted;
  }

  h1, h2, h3, h4, h5, h6 {
    font-size: inherit;
    font-weight: inherit;
  }

  a {
    color: inherit;
    -webkit-text-decoration: inherit;
    text-decoration: inherit;
  }

  b, strong {
    font-weight: bolder;
  }

  code, kbd, samp, pre {
    font-family: var(--default-mono-font-family, ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace);
    font-feature-settings: var(--default-mono-font-feature-settings, normal);
    font-variation-settings: var(--default-mono-font-variation-settings, normal);
    font-size: 1em;
  }

  small {
    font-size: 80%;
  }

  sub, sup {
    vertical-align: baseline;
    font-size: 75%;
    line-height: 0;
    position: relative;
  }

  sub {
    bottom: -.25em;
  }

  sup {
    top: -.5em;
  }

  table {
    text-indent: 0;
    border-color: inherit;
    border-collapse: collapse;
  }

  :-moz-focusring {
    outline: auto;
  }

  progress {
    vertical-align: baseline;
  }

  summary {
    display: list-item;
  }

  ol, ul, menu {
    list-style: none;
  }

  img, svg, video, canvas, audio, iframe, embed, object {
    vertical-align: middle;
    display: block;
  }

  img, video {
    max-width: 100%;
    height: auto;
  }

  button, input, select, optgroup, textarea, ::file-selector-button {
    font: inherit;
    font-feature-settings: inherit;
    font-variation-settings: inherit;
    letter-spacing: inherit;
    color: inherit;
    opacity: 1;
    background-color: #0000;
    border-radius: 0;
  }

  :where(select:is([multiple], [size])) optgroup {
    font-weight: bolder;
  }

  :where(select:is([multiple], [size])) optgroup option {
    padding-inline-start: 20px;
  }

  ::file-selector-button {
    margin-inline-end: 4px;
  }

  ::placeholder {
    opacity: 1;
  }

  @supports (not ((-webkit-appearance: -apple-pay-button))) or (contain-intrinsic-size: 1px) {
    ::placeholder {
      color: currentColor;
    }

    @supports (color: color-mix(in lab, red, red)) {
      ::placeholder {
        color: color-mix(in oklab, currentcolor 50%, transparent);
      }
    }
  }

  textarea {
    resize: vertical;
  }

  ::-webkit-search-decoration {
    -webkit-appearance: none;
  }

  ::-webkit-date-and-time-value {
    min-height: 1lh;
    text-align: inherit;
  }

  ::-webkit-datetime-edit {
    display: inline-flex;
  }

  ::-webkit-datetime-edit-fields-wrapper {
    padding: 0;
  }

  ::-webkit-datetime-edit, ::-webkit-datetime-edit-year-field, ::-webkit-datetime-edit-month-field, ::-webkit-datetime-edit-day-field, ::-webkit-datetime-edit-hour-field, ::-webkit-datetime-edit-minute-field, ::-webkit-datetime-edit-second-field, ::-webkit-datetime-edit-millisecond-field, ::-webkit-datetime-edit-meridiem-field {
    padding-block: 0;
  }

  :-moz-ui-invalid {
    box-shadow: none;
  }

  button, input:where([type="button"], [type="reset"], [type="submit"]), ::file-selector-button {
    appearance: button;
  }

  ::-webkit-inner-spin-button, ::-webkit-outer-spin-button {
    height: auto;
  }

  [hidden]:where(:not([hidden="until-found"])) {
    display: none !important;
  }

  *, :after, :before, ::backdrop, ::file-selector-button {
    border-color: var(--color-fd-border, currentColor);
  }

  [data-rmiz-modal-overlay="visible"] {
    background-color: var(--color-fd-background);
  }

  * {
    border: var(--border);
    outline: 50% solid var(--ring);
  }

  body {
    background-color: var(--background);
    color: var(--foreground);
  }
}

@layer components;

@layer utilities {
  .\@container {
    container-type: inline-size;
  }

  .pointer-events-none {
    pointer-events: none;
  }

  .invisible {
    visibility: hidden;
  }

  .fd-step:before {
    background-color: var(--color-fd-secondary);
    color: var(--color-fd-secondary-foreground);
    content: counter(step);
    counter-increment: step;
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
    border-radius: 3.40282e38px;
    justify-content: center;
    align-items: center;
    font-size: .875rem;
    line-height: 1.25rem;
    display: flex;
    position: absolute;
    inset-inline-start: calc(var(--spacing) * -4);
  }

  .sr-only {
    clip: rect(0, 0, 0, 0);
    white-space: nowrap;
    border-width: 0;
    width: 1px;
    height: 1px;
    margin: -1px;
    padding: 0;
    position: absolute;
    overflow: hidden;
  }

  .fd-steps {
    counter-reset: step;
    margin-left: calc(var(--spacing) * 2);
    border-left-style: var(--tw-border-style);
    padding-left: calc(var(--spacing) * 6);
    border-left-width: 1px;
    position: relative;
  }

  @media (width >= 40rem) {
    .fd-steps {
      margin-left: calc(var(--spacing) * 4);
      padding-left: calc(var(--spacing) * 7);
    }
  }

  .absolute {
    position: absolute;
  }

  .fixed {
    position: fixed;
  }

  .relative {
    position: relative;
  }

  .static {
    position: static;
  }

  .sticky {
    position: sticky;
  }

  .inset-0 {
    inset: calc(var(--spacing) * 0);
  }

  .inset-x-0 {
    inset-inline: calc(var(--spacing) * 0);
  }

  .inset-y-0 {
    inset-block: calc(var(--spacing) * 0);
  }

  .inset-y-3 {
    inset-block: calc(var(--spacing) * 3);
  }

  .start-0 {
    inset-inline-start: calc(var(--spacing) * 0);
  }

  .start-3 {
    inset-inline-start: calc(var(--spacing) * 3);
  }

  .end-2 {
    inset-inline-end: calc(var(--spacing) * 2);
  }

  .-top-1\.5 {
    top: calc(var(--spacing) * -1.5);
  }

  .-top-4 {
    top: calc(var(--spacing) * -4);
  }

  .top-\(--fd-banner-height\) {
    top: var(--fd-banner-height);
  }

  .top-\(--fd-sidebar-top\) {
    top: var(--fd-sidebar-top);
  }

  .top-\(--fd-top\) {
    top: var(--fd-top);
  }

  .top-0 {
    top: calc(var(--spacing) * 0);
  }

  .top-1\.5 {
    top: calc(var(--spacing) * 1.5);
  }

  .top-1\/2 {
    top: 50%;
  }

  .top-2 {
    top: calc(var(--spacing) * 2);
  }

  .top-4 {
    top: calc(var(--spacing) * 4);
  }

  .top-\[1px\] {
    top: 1px;
  }

  .top-\[10vh\] {
    top: 10vh;
  }

  .top-\[60\%\] {
    top: 60%;
  }

  .top-\[calc\(var\(--fd-banner-height\)\+var\(--fd-nav-height\)\)\] {
    top: calc(var(--fd-banner-height)  + var(--fd-nav-height));
  }

  .top-\[calc\(var\(--offset\)\/2\*-1\)\] {
    top: calc(var(--offset) / 2 * -1);
  }

  .top-full {
    top: 100%;
  }

  .right-0 {
    right: calc(var(--spacing) * 0);
  }

  .right-2 {
    right: calc(var(--spacing) * 2);
  }

  .right-4 {
    right: calc(var(--spacing) * 4);
  }

  .right-\[40\%\] {
    right: 40%;
  }

  .bottom-0 {
    bottom: calc(var(--spacing) * 0);
  }

  .bottom-1\.5 {
    bottom: calc(var(--spacing) * 1.5);
  }

  .bottom-\[0\%\] {
    bottom: 0%;
  }

  .-left-4 {
    left: calc(var(--spacing) * -4);
  }

  .left-\(--fd-nav-left\) {
    left: var(--fd-nav-left);
  }

  .left-0 {
    left: calc(var(--spacing) * 0);
  }

  .left-1\/2 {
    left: 50%;
  }

  .left-\[calc\(var\(--offset\)\/2\*-1\)\] {
    left: calc(var(--offset) / 2 * -1);
  }

  .isolate {
    isolation: isolate;
  }

  .z-10 {
    z-index: 10;
  }

  .z-20 {
    z-index: 20;
  }

  .z-30 {
    z-index: 30;
  }

  .z-40 {
    z-index: 40;
  }

  .z-50 {
    z-index: 50;
  }

  .z-\[-1\] {
    z-index: -1;
  }

  .z-\[1\] {
    z-index: 1;
  }

  .z-\[2\] {
    z-index: 2;
  }

  .container {
    width: 100%;
  }

  @media (width >= 40rem) {
    .container {
      max-width: 40rem;
    }
  }

  @media (width >= 48rem) {
    .container {
      max-width: 48rem;
    }
  }

  @media (width >= 64rem) {
    .container {
      max-width: 64rem;
    }
  }

  @media (width >= 80rem) {
    .container {
      max-width: 80rem;
    }
  }

  @media (width >= 96rem) {
    .container {
      max-width: 96rem;
    }
  }

  .container {
    margin-inline: auto;
    padding-inline: 1rem;
  }

  @media (width >= 96rem) {
    .container {
      max-width: 1400px;
    }
  }

  .-mx-1 {
    margin-inline: calc(var(--spacing) * -1);
  }

  .-mx-2 {
    margin-inline: calc(var(--spacing) * -2);
  }

  .mx-auto {
    margin-inline: auto;
  }

  .\!my-0 {
    margin-block: calc(var(--spacing) * 0) !important;
  }

  .-my-1\.5 {
    margin-block: calc(var(--spacing) * -1.5);
  }

  .my-0 {
    margin-block: calc(var(--spacing) * 0);
  }

  .my-4 {
    margin-block: calc(var(--spacing) * 4);
  }

  .my-6 {
    margin-block: calc(var(--spacing) * 6);
  }

  .my-10 {
    margin-block: calc(var(--spacing) * 10);
  }

  .my-auto {
    margin-block: auto;
  }

  .-ms-1\.5 {
    margin-inline-start: calc(var(--spacing) * -1.5);
  }

  .ms-1 {
    margin-inline-start: calc(var(--spacing) * 1);
  }

  .ms-2 {
    margin-inline-start: calc(var(--spacing) * 2);
  }

  .ms-auto {
    margin-inline-start: auto;
  }

  .-me-\(--fd-sidebar-width\) {
    margin-inline-end: calc(var(--fd-sidebar-width) * -1);
  }

  .-me-1\.5 {
    margin-inline-end: calc(var(--spacing) * -1.5);
  }

  .-me-2 {
    margin-inline-end: calc(var(--spacing) * -2);
  }

  .me-1\.5 {
    margin-inline-end: calc(var(--spacing) * 1.5);
  }

  .me-2 {
    margin-inline-end: calc(var(--spacing) * 2);
  }

  .me-auto {
    margin-inline-end: auto;
  }

  .prose {
    color: var(--tw-prose-body);
    --tw-prose-body: var(--color-fd-foreground);
    --tw-prose-headings: var(--color-fd-foreground);
    --tw-prose-lead: var(--color-fd-foreground);
    --tw-prose-links: var(--color-fd-foreground);
    --tw-prose-bold: var(--color-fd-foreground);
    --tw-prose-counters: var(--color-fd-muted-foreground);
    --tw-prose-bullets: var(--color-fd-muted-foreground);
    --tw-prose-hr: var(--color-fd-border);
    --tw-prose-quotes: var(--color-fd-foreground);
    --tw-prose-quote-borders: var(--color-fd-border);
    --tw-prose-captions: var(--color-fd-foreground);
    --tw-prose-code: var(--color-fd-foreground);
    --tw-prose-th-borders: var(--color-fd-border);
    --tw-prose-td-borders: var(--color-fd-border);
    --tw-prose-kbd: var(--color-fd-foreground);
    --tw-prose-kbd-shadows: var(--color-fd-primary);
    max-width: none;
    font-size: 1rem;
    line-height: 1.75rem;
  }

  .prose :where([class~="lead"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-lead);
    margin-top: 1.2em;
    margin-bottom: 1.2em;
    font-size: 1.25em;
    line-height: 1.6;
  }

  .prose :where(ul):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1rem;
    list-style-type: disc;
  }

  .prose :where(li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .5em;
    margin-bottom: .5em;
  }

  .prose :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: .375em;
  }

  .prose :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-inline-start: 0;
  }

  .prose :where(.prose > ul > li p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em;
  }

  .prose :where(.prose > ul > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
  }

  .prose :where(.prose > ul > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.25em;
  }

  .prose :where(.prose > ol > li > p:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
  }

  .prose :where(.prose > ol > li > p:last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 1.25em;
  }

  .prose :where(ul ul, ul ol, ol ul, ol ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .75em;
    margin-bottom: .75em;
  }

  .prose :where(dl):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .prose :where(dt):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.25em;
    font-weight: 600;
  }

  .prose :where(dd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: .5em;
    padding-inline-start: 1.625em;
  }

  .prose :where(hr):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-color: var(--tw-prose-hr);
    border-top-width: 1px;
    margin-top: 3em;
    margin-bottom: 3em;
  }

  .prose :where(p):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .prose :where(strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-bold);
    font-weight: 500;
  }

  .prose :where(a strong):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(blockquote strong):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(thead th strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(ol):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
    padding-inline-start: 1.625em;
    list-style-type: decimal;
  }

  .prose :where(ol[type="A"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-alpha;
  }

  .prose :where(ol[type="a"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-alpha;
  }

  .prose :where(ol[type="A" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-alpha;
  }

  .prose :where(ol[type="a" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-alpha;
  }

  .prose :where(ol[type="I"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-roman;
  }

  .prose :where(ol[type="i"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-roman;
  }

  .prose :where(ol[type="I" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: upper-roman;
  }

  .prose :where(ol[type="i" s]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: lower-roman;
  }

  .prose :where(ol[type="1"]):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    list-style-type: decimal;
  }

  .prose :where(ol > li):not(:where([class~="not-prose"], [class~="not-prose"] *))::marker {
    color: var(--tw-prose-counters);
    font-weight: 400;
  }

  .prose :where(ul > li):not(:where([class~="not-prose"], [class~="not-prose"] *))::marker {
    color: var(--tw-prose-bullets);
  }

  .prose :where(blockquote):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-quotes);
    border-inline-start-width: .25rem;
    border-inline-start-color: var(--tw-prose-quote-borders);
    quotes: "“""”""‘""’";
    margin-top: 1.6em;
    margin-bottom: 1.6em;
    padding-inline-start: 1em;
    font-style: italic;
    font-weight: 500;
  }

  .prose :where(blockquote p:first-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *)):before {
    content: open-quote;
  }

  .prose :where(blockquote p:last-of-type):not(:where([class~="not-prose"], [class~="not-prose"] *)):after {
    content: close-quote;
  }

  .prose :where(h1):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 800;
    font-size: var(--text-3xl);
    margin-top: 0;
    margin-bottom: .888889em;
    line-height: 1.11111;
  }

  .prose :where(h1 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-weight: 900;
  }

  .prose :where(h2):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 2em;
    margin-bottom: 1em;
    font-size: 1.5em;
    font-weight: 600;
    line-height: 1.33333;
  }

  .prose :where(h2 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-weight: 800;
  }

  .prose :where(h3):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.6em;
    margin-bottom: .6em;
    font-size: 1.25em;
    font-weight: 600;
    line-height: 1.6;
  }

  .prose :where(h3 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-weight: 700;
  }

  .prose :where(h4):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    margin-top: 1.5em;
    margin-bottom: .5em;
    font-weight: 600;
    line-height: 1.5;
  }

  .prose :where(h4 strong):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-weight: 700;
  }

  .prose :where(hr + *):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(h2 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(h3 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(h4 + *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(picture):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
    display: block;
  }

  .prose :where(picture > img):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose :where(video):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(kbd):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    padding-top: .1875em;
    padding-inline-end: .375em;
    padding-bottom: .1875em;
    color: var(--tw-prose-kbd);
    box-shadow: 0 0 0 1px var(--tw-prose-kbd-shadows), 0 3px 0 var(--tw-prose-kbd-shadows);
    border-radius: .3125rem;
    padding-inline-start: .375em;
    font-family: inherit;
    font-size: .875em;
    font-weight: 500;
  }

  .prose :where(code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border: 1px solid;
    border-color: var(--color-fd-border);
    background: var(--color-fd-muted);
    color: var(--tw-prose-code);
    border-radius: 5px;
    padding: 3px;
    font-size: 13px;
    font-weight: 400;
  }

  .prose :where(a code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(h1 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: var(--text-2xl);
  }

  .prose :where(h2 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: .875em;
  }

  .prose :where(h3 code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
    font-size: .9em;
  }

  .prose :where(h4 code):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(blockquote code):not(:where([class~="not-prose"], [class~="not-prose"] *)), .prose :where(thead th code):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: inherit;
  }

  .prose :where(table):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    table-layout: auto;
    border-collapse: separate;
    border-spacing: 0;
    background: var(--color-fd-card);
    border-radius: var(--radius-lg);
    border: 1px solid var(--color-fd-border);
    width: 100%;
    margin-top: 2em;
    margin-bottom: 2em;
    font-size: .875em;
    line-height: 1.71429;
    overflow: hidden;
  }

  .prose :where(thead th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-headings);
    font-weight: 600;
  }

  .prose :where(figure):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 2em;
    margin-bottom: 2em;
  }

  .prose :where(figure > *):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
    margin-bottom: 0;
  }

  .prose :where(figcaption):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-captions);
    margin-top: .857143em;
    font-size: .875em;
    line-height: 1.42857;
  }

  .prose :where(a:not([data-card])):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    color: var(--tw-prose-links);
    text-underline-offset: 3.5px;
    text-decoration: underline;
    text-decoration-color: var(--color-fd-primary);
    font-weight: 500;
    text-decoration-thickness: 1.5px;
    transition: opacity .2s;
  }

  .prose :where(a:not([data-card]):hover):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    opacity: .8;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .prose {
      --tw-prose-body: color-mix(in oklab, var(--color-fd-foreground) 90%, transparent);
      --tw-prose-kbd-shadows: color-mix(in oklab, var(--color-fd-primary) 50%, transparent);
    }
  }

  .prose :where(.prose > :first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-top: 0;
  }

  .prose :where(.prose > :last-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    margin-bottom: 0;
  }

  .prose :where(th):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
    padding: calc(var(--spacing) * 2.5);
    border-inline-start: 1px solid var(--color-fd-border);
    background: var(--color-fd-muted);
  }

  .prose :where(th:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-inline-start: none;
  }

  .prose :where(th:not(tr:last-child *), td:not(tr:last-child *)):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom: 1px solid var(--color-fd-border);
  }

  .prose :where(td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    text-align: start;
    border-inline-start: 1px solid var(--color-fd-border);
    padding: calc(var(--spacing) * 2.5);
  }

  .prose :where(td:first-child):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-inline-start: none;
  }

  .prose :where(tfoot th, tfoot td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-top-width: 1px;
    border-top-color: var(--tw-prose-th-borders);
  }

  .prose :where(thead th, thead td):not(:where([class~="not-prose"], [class~="not-prose"] *)) {
    border-bottom-width: 1px;
    border-bottom-color: var(--tw-prose-th-borders);
  }

  .prose-no-margin > :first-child {
    margin-top: 0;
  }

  .prose-no-margin > :last-child {
    margin-bottom: 0;
  }

  .mt-\(--fd-nav-height\) {
    margin-top: var(--fd-nav-height);
  }

  .mt-\(--fd-top\) {
    margin-top: var(--fd-top);
  }

  .mt-1\.5 {
    margin-top: calc(var(--spacing) * 1.5);
  }

  .mt-6 {
    margin-top: calc(var(--spacing) * 6);
  }

  .mt-auto {
    margin-top: auto;
  }

  .-mb-1 {
    margin-bottom: calc(var(--spacing) * -1);
  }

  .mb-1 {
    margin-bottom: calc(var(--spacing) * 1);
  }

  .mb-2 {
    margin-bottom: calc(var(--spacing) * 2);
  }

  .mb-4 {
    margin-bottom: calc(var(--spacing) * 4);
  }

  .mb-8 {
    margin-bottom: calc(var(--spacing) * 8);
  }

  .mb-auto {
    margin-bottom: auto;
  }

  .ml-1 {
    margin-left: calc(var(--spacing) * 1);
  }

  .box-content {
    box-sizing: content-box;
  }

  .block {
    display: block;
  }

  .flex {
    display: flex;
  }

  .grid {
    display: grid;
  }

  .hidden {
    display: none;
  }

  .inline {
    display: inline;
  }

  .inline-block {
    display: inline-block;
  }

  .inline-flex {
    display: inline-flex;
  }

  .table {
    display: table;
  }

  .aspect-\[600\/1000\] {
    aspect-ratio: 600 / 1000;
  }

  .aspect-square {
    aspect-ratio: 1;
  }

  .size-2\.5 {
    width: calc(var(--spacing) * 2.5);
    height: calc(var(--spacing) * 2.5);
  }

  .size-3 {
    width: calc(var(--spacing) * 3);
    height: calc(var(--spacing) * 3);
  }

  .size-3\.5 {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .size-4 {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .size-4\.5 {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }

  .size-5 {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }

  .size-6\.5 {
    width: calc(var(--spacing) * 6.5);
    height: calc(var(--spacing) * 6.5);
  }

  .size-8 {
    width: calc(var(--spacing) * 8);
    height: calc(var(--spacing) * 8);
  }

  .size-9 {
    width: calc(var(--spacing) * 9);
    height: calc(var(--spacing) * 9);
  }

  .size-\[1200px\] {
    width: 1200px;
    height: 1200px;
  }

  .size-full {
    width: 100%;
    height: 100%;
  }

  .h-\(--fd-height\) {
    height: var(--fd-height);
  }

  .h-\(--fd-sidebar-height\) {
    height: var(--fd-sidebar-height);
  }

  .h-\(--fd-toc-height\) {
    height: var(--fd-toc-height);
  }

  .h-\(--radix-navigation-menu-viewport-height\) {
    height: var(--radix-navigation-menu-viewport-height);
  }

  .h-1\.5 {
    height: calc(var(--spacing) * 1.5);
  }

  .h-2 {
    height: calc(var(--spacing) * 2);
  }

  .h-4 {
    height: calc(var(--spacing) * 4);
  }

  .h-8 {
    height: calc(var(--spacing) * 8);
  }

  .h-9 {
    height: calc(var(--spacing) * 9);
  }

  .h-10 {
    height: calc(var(--spacing) * 10);
  }

  .h-14 {
    height: calc(var(--spacing) * 14);
  }

  .h-\[20px\] {
    height: 20px;
  }

  .h-\[calc\(100\%\+var\(--offset\)\)\] {
    height: calc(100% + var(--offset));
  }

  .h-\[var\(--height\)\] {
    height: var(--height);
  }

  .h-\[var\(--radix-navigation-menu-viewport-height\)\] {
    height: var(--radix-navigation-menu-viewport-height);
  }

  .h-auto {
    height: auto;
  }

  .h-full {
    height: 100%;
  }

  .h-screen {
    height: 100vh;
  }

  .max-h-\[50vh\] {
    max-height: 50vh;
  }

  .max-h-\[100vh\] {
    max-height: 100vh;
  }

  .max-h-\[400px\] {
    max-height: 400px;
  }

  .max-h-\[460px\] {
    max-height: 460px;
  }

  .max-h-\[600px\] {
    max-height: 600px;
  }

  .min-h-0 {
    min-height: calc(var(--spacing) * 0);
  }

  .min-h-10 {
    min-height: calc(var(--spacing) * 10);
  }

  .min-h-screen {
    min-height: 100vh;
  }

  .w-\(--fd-sidebar-width\) {
    width: var(--fd-sidebar-width);
  }

  .w-\(--fd-toc-width\) {
    width: var(--fd-toc-width);
  }

  .w-\(--radix-popover-trigger-width\) {
    width: var(--radix-popover-trigger-width);
  }

  .w-0 {
    width: calc(var(--spacing) * 0);
  }

  .w-1\.5 {
    width: calc(var(--spacing) * 1.5);
  }

  .w-1\/4 {
    width: 25%;
  }

  .w-2 {
    width: calc(var(--spacing) * 2);
  }

  .w-3\/4 {
    width: 75%;
  }

  .w-\[4px\] {
    width: 4px;
  }

  .w-\[30\%\] {
    width: 30%;
  }

  .w-\[45\%\] {
    width: 45%;
  }

  .w-\[85\%\] {
    width: 85%;
  }

  .w-\[98vw\] {
    width: 98vw;
  }

  .w-\[100px\] {
    width: 100px;
  }

  .w-\[calc\(100\%\+var\(--offset\)\)\] {
    width: calc(100% + var(--offset));
  }

  .w-\[var\(--width\)\] {
    width: var(--width);
  }

  .w-fit {
    width: fit-content;
  }

  .w-full {
    width: 100%;
  }

  .w-max {
    width: max-content;
  }

  .w-px {
    width: 1px;
  }

  .max-w-2xl {
    max-width: var(--container-2xl);
  }

  .max-w-4xl {
    max-width: var(--container-4xl);
  }

  .max-w-7xl {
    max-width: var(--container-7xl);
  }

  .max-w-\[98vw\] {
    max-width: 98vw;
  }

  .max-w-\[240px\] {
    max-width: 240px;
  }

  .max-w-\[300px\] {
    max-width: 300px;
  }

  .max-w-\[380px\] {
    max-width: 380px;
  }

  .max-w-\[400px\] {
    max-width: 400px;
  }

  .max-w-\[860px\] {
    max-width: 860px;
  }

  .max-w-\[1120px\] {
    max-width: 1120px;
  }

  .max-w-fd-container {
    max-width: var(--spacing-fd-container);
  }

  .max-w-full {
    max-width: 100%;
  }

  .max-w-max {
    max-width: max-content;
  }

  .max-w-screen-sm {
    max-width: var(--breakpoint-sm);
  }

  .max-w-sm {
    max-width: var(--container-sm);
  }

  .min-w-0 {
    min-width: calc(var(--spacing) * 0);
  }

  .min-w-\[220px\] {
    min-width: 220px;
  }

  .flex-1 {
    flex: 1;
  }

  .shrink-0 {
    flex-shrink: 0;
  }

  .origin-\(--radix-tooltip-content-transform-origin\) {
    transform-origin: var(--radix-tooltip-content-transform-origin);
  }

  .origin-\[top_center\] {
    transform-origin: top;
  }

  .origin-bottom {
    transform-origin: bottom;
  }

  .origin-top {
    transform-origin: top;
  }

  .-translate-x-\(--fd-sidebar-offset\) {
    --tw-translate-x: calc(var(--fd-sidebar-offset) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-x-1\/2 {
    --tw-translate-x: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-x-0 {
    --tw-translate-x: calc(var(--spacing) * 0);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-1\/2 {
    --tw-translate-y: calc(calc(1 / 2 * 100%) * -1);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .-translate-y-full {
    --tw-translate-y: -100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-0\.5 {
    --tw-translate-y: calc(var(--spacing) * .5);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-\[calc\(-50\%_-_2px\)\] {
    --tw-translate-y: calc(-50% - 2px);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .translate-y-full {
    --tw-translate-y: 100%;
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .scale-0 {
    --tw-scale-x: 0%;
    --tw-scale-y: 0%;
    --tw-scale-z: 0%;
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .-rotate-90 {
    rotate: -90deg;
  }

  .rotate-45 {
    rotate: 45deg;
  }

  .rotate-180 {
    rotate: 180deg;
  }

  .transform {
    transform: var(--tw-rotate-x, ) var(--tw-rotate-y, ) var(--tw-rotate-z, ) var(--tw-skew-x, ) var(--tw-skew-y, );
  }

  .animate-fd-fade-in {
    animation: var(--animate-fd-fade-in);
  }

  .animate-in {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .animate-pulse {
    animation: var(--animate-pulse);
  }

  .animate-spin {
    animation: var(--animate-spin);
  }

  .scroll-m-20 {
    scroll-margin: calc(var(--spacing) * 20);
  }

  .scroll-m-28 {
    scroll-margin: calc(var(--spacing) * 28);
  }

  .list-none {
    list-style-type: none;
  }

  .grid-cols-1 {
    grid-template-columns: repeat(1, minmax(0, 1fr));
  }

  .grid-cols-2 {
    grid-template-columns: repeat(2, minmax(0, 1fr));
  }

  .grid-cols-5 {
    grid-template-columns: repeat(5, minmax(0, 1fr));
  }

  .flex-col {
    flex-direction: column;
  }

  .flex-row {
    flex-direction: row;
  }

  .flex-row-reverse {
    flex-direction: row-reverse;
  }

  .flex-wrap {
    flex-wrap: wrap;
  }

  .items-center {
    align-items: center;
  }

  .items-end {
    align-items: flex-end;
  }

  .items-start {
    align-items: flex-start;
  }

  .justify-between {
    justify-content: space-between;
  }

  .justify-center {
    justify-content: center;
  }

  .justify-end {
    justify-content: flex-end;
  }

  .gap-0\.5 {
    gap: calc(var(--spacing) * .5);
  }

  .gap-1 {
    gap: calc(var(--spacing) * 1);
  }

  .gap-1\.5 {
    gap: calc(var(--spacing) * 1.5);
  }

  .gap-2 {
    gap: calc(var(--spacing) * 2);
  }

  .gap-2\.5 {
    gap: calc(var(--spacing) * 2.5);
  }

  .gap-3 {
    gap: calc(var(--spacing) * 3);
  }

  .gap-3\.5 {
    gap: calc(var(--spacing) * 3.5);
  }

  .gap-4 {
    gap: calc(var(--spacing) * 4);
  }

  .gap-6 {
    gap: calc(var(--spacing) * 6);
  }

  .gap-8 {
    gap: calc(var(--spacing) * 8);
  }

  :where(.space-x-1 > :not(:last-child)) {
    --tw-space-x-reverse: 0;
    margin-inline-start: calc(calc(var(--spacing) * 1) * var(--tw-space-x-reverse));
    margin-inline-end: calc(calc(var(--spacing) * 1) * calc(1 - var(--tw-space-x-reverse)));
  }

  :where(.divide-y > :not(:last-child)) {
    --tw-divide-y-reverse: 0;
    border-bottom-style: var(--tw-border-style);
    border-top-style: var(--tw-border-style);
    border-top-width: calc(1px * var(--tw-divide-y-reverse));
    border-bottom-width: calc(1px * calc(1 - var(--tw-divide-y-reverse)));
  }

  :where(.divide-fd-border > :not(:last-child)) {
    border-color: var(--color-fd-border);
  }

  .truncate {
    text-overflow: ellipsis;
    white-space: nowrap;
    overflow: hidden;
  }

  .overflow-auto {
    overflow: auto;
  }

  .overflow-hidden {
    overflow: hidden;
  }

  .overflow-visible {
    overflow: visible;
  }

  .overflow-x-auto {
    overflow-x: auto;
  }

  .overflow-y-auto {
    overflow-y: auto;
  }

  .rounded-2xl {
    border-radius: var(--radius-2xl);
  }

  .rounded-3xl {
    border-radius: var(--radius-3xl);
  }

  .rounded-\[2px\] {
    border-radius: 2px;
  }

  .rounded-\[inherit\] {
    border-radius: inherit;
  }

  .rounded-full {
    border-radius: 3.40282e38px;
  }

  .rounded-lg {
    border-radius: var(--radius-lg);
  }

  .rounded-md {
    border-radius: var(--radius-md);
  }

  .rounded-sm {
    border-radius: var(--radius-sm);
  }

  .rounded-xl {
    border-radius: var(--radius-xl);
  }

  .rounded-xs {
    border-radius: var(--radius-xs);
  }

  .rounded-e-xl {
    border-start-end-radius: var(--radius-xl);
    border-end-end-radius: var(--radius-xl);
  }

  .rounded-tl-sm {
    border-top-left-radius: var(--radius-sm);
  }

  .border {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .border-s {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 1px;
  }

  .border-s-2 {
    border-inline-start-style: var(--tw-border-style);
    border-inline-start-width: 2px;
  }

  .border-e {
    border-inline-end-style: var(--tw-border-style);
    border-inline-end-width: 1px;
  }

  .border-t {
    border-top-style: var(--tw-border-style);
    border-top-width: 1px;
  }

  .border-r {
    border-right-style: var(--tw-border-style);
    border-right-width: 1px;
  }

  .border-b {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 1px;
  }

  .border-l {
    border-left-style: var(--tw-border-style);
    border-left-width: 1px;
  }

  .border-fd-foreground\/10 {
    border-color: var(--color-fd-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-fd-foreground\/10 {
      border-color: color-mix(in oklab, var(--color-fd-foreground) 10%, transparent);
    }
  }

  .border-fd-primary {
    border-color: var(--color-fd-primary);
  }

  .border-gray-300 {
    border-color: var(--color-gray-300);
  }

  .border-transparent {
    border-color: #0000;
  }

  .border-white\/20 {
    border-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-white\/20 {
      border-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .border-s-blue-500\/50 {
    border-inline-start-color: #3080ff80;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-s-blue-500\/50 {
      border-inline-start-color: color-mix(in oklab, var(--color-blue-500) 50%, transparent);
    }
  }

  .border-s-orange-500\/50 {
    border-inline-start-color: #fe6e0080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-s-orange-500\/50 {
      border-inline-start-color: color-mix(in oklab, var(--color-orange-500) 50%, transparent);
    }
  }

  .border-s-red-500\/50 {
    border-inline-start-color: #fb2c3680;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .border-s-red-500\/50 {
      border-inline-start-color: color-mix(in oklab, var(--color-red-500) 50%, transparent);
    }
  }

  .bg-\(--shiki-light-bg\) {
    background-color: var(--shiki-light-bg);
  }

  .bg-black\/30 {
    background-color: #0000004d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/30 {
      background-color: color-mix(in oklab, var(--color-black) 30%, transparent);
    }
  }

  .bg-black\/40 {
    background-color: #0006;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/40 {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }

  .bg-black\/50 {
    background-color: #00000080;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-black\/50 {
      background-color: color-mix(in oklab, var(--color-black) 50%, transparent);
    }
  }

  .bg-blue-500 {
    background-color: var(--color-blue-500);
  }

  .bg-fd-accent {
    background-color: var(--color-fd-accent);
  }

  .bg-fd-background {
    background-color: var(--color-fd-background);
  }

  .bg-fd-background\/80 {
    background-color: var(--color-fd-background);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fd-background\/80 {
      background-color: color-mix(in oklab, var(--color-fd-background) 80%, transparent);
    }
  }

  .bg-fd-border {
    background-color: var(--color-fd-border);
  }

  .bg-fd-card {
    background-color: var(--color-fd-card);
  }

  .bg-fd-foreground\/10 {
    background-color: var(--color-fd-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fd-foreground\/10 {
      background-color: color-mix(in oklab, var(--color-fd-foreground) 10%, transparent);
    }
  }

  .bg-fd-muted {
    background-color: var(--color-fd-muted);
  }

  .bg-fd-popover {
    background-color: var(--color-fd-popover);
  }

  .bg-fd-primary {
    background-color: var(--color-fd-primary);
  }

  .bg-fd-primary\/10 {
    background-color: var(--color-fd-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fd-primary\/10 {
      background-color: color-mix(in oklab, var(--color-fd-primary) 10%, transparent);
    }
  }

  .bg-fd-primary\/30 {
    background-color: var(--color-fd-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fd-primary\/30 {
      background-color: color-mix(in oklab, var(--color-fd-primary) 30%, transparent);
    }
  }

  .bg-fd-secondary {
    background-color: var(--color-fd-secondary);
  }

  .bg-fd-secondary\/50 {
    background-color: var(--color-fd-secondary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-fd-secondary\/50 {
      background-color: color-mix(in oklab, var(--color-fd-secondary) 50%, transparent);
    }
  }

  .bg-sky-600 {
    background-color: var(--color-sky-600);
  }

  .bg-transparent {
    background-color: #0000;
  }

  .bg-white\/10 {
    background-color: #ffffff1a;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .bg-white\/10 {
      background-color: color-mix(in oklab, var(--color-white) 10%, transparent);
    }
  }

  .bg-\[linear-gradient\(to_bottom\,var\(--color\)\,var\(--color\)_50\%\,transparent_0\,transparent\)\] {
    background-image: linear-gradient(to bottom, var(--color), var(--color) 50%, transparent 0, transparent);
  }

  .bg-\[linear-gradient\(to_right\,var\(--color\)\,var\(--color\)_50\%\,transparent_0\,transparent\)\] {
    background-image: linear-gradient(to right, var(--color), var(--color) 50%, transparent 0, transparent);
  }

  .\[mask-image\:linear-gradient\(to_bottom\,transparent\,white_16px\,white_calc\(100\%-16px\)\,transparent\)\] {
    mask-image: linear-gradient(#0000, #fff 16px calc(100% - 16px), #0000);
  }

  .\[background-size\:var\(--width\)_var\(--height\)\] {
    background-size: var(--width) var(--height);
  }

  .\[mask-composite\:exclude\] {
    mask-composite: exclude;
  }

  .fill-blue-500 {
    fill: var(--color-blue-500);
  }

  .fill-orange-500 {
    fill: var(--color-orange-500);
  }

  .fill-red-500 {
    fill: var(--color-red-500);
  }

  .stroke-current\/25 {
    stroke: currentColor;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .stroke-current\/25 {
      stroke: color-mix(in oklab, currentcolor 25%, transparent);
    }
  }

  .stroke-fd-foreground\/10 {
    stroke: var(--color-fd-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .stroke-fd-foreground\/10 {
      stroke: color-mix(in oklab, var(--color-fd-foreground) 10%, transparent);
    }
  }

  .object-cover {
    object-fit: cover;
  }

  .p-0 {
    padding: calc(var(--spacing) * 0);
  }

  .p-0\.5 {
    padding: calc(var(--spacing) * .5);
  }

  .p-1 {
    padding: calc(var(--spacing) * 1);
  }

  .p-1\.5 {
    padding: calc(var(--spacing) * 1.5);
  }

  .p-2 {
    padding: calc(var(--spacing) * 2);
  }

  .p-3 {
    padding: calc(var(--spacing) * 3);
  }

  .p-4 {
    padding: calc(var(--spacing) * 4);
  }

  .p-px {
    padding: 1px;
  }

  .px-\(--fd-layout-offset\) {
    padding-inline: var(--fd-layout-offset);
  }

  .px-1\.5 {
    padding-inline: calc(var(--spacing) * 1.5);
  }

  .px-2 {
    padding-inline: calc(var(--spacing) * 2);
  }

  .px-3 {
    padding-inline: calc(var(--spacing) * 3);
  }

  .px-4 {
    padding-inline: calc(var(--spacing) * 4);
  }

  .px-6 {
    padding-inline: calc(var(--spacing) * 6);
  }

  .py-0\.5 {
    padding-block: calc(var(--spacing) * .5);
  }

  .py-1 {
    padding-block: calc(var(--spacing) * 1);
  }

  .py-1\.5 {
    padding-block: calc(var(--spacing) * 1.5);
  }

  .py-2 {
    padding-block: calc(var(--spacing) * 2);
  }

  .py-2\.5 {
    padding-block: calc(var(--spacing) * 2.5);
  }

  .py-3 {
    padding-block: calc(var(--spacing) * 3);
  }

  .py-3\.5 {
    padding-block: calc(var(--spacing) * 3.5);
  }

  .py-4 {
    padding-block: calc(var(--spacing) * 4);
  }

  .py-8 {
    padding-block: calc(var(--spacing) * 8);
  }

  .py-12 {
    padding-block: calc(var(--spacing) * 12);
  }

  .py-16 {
    padding-block: calc(var(--spacing) * 16);
  }

  .ps-2 {
    padding-inline-start: calc(var(--spacing) * 2);
  }

  .ps-3 {
    padding-inline-start: calc(var(--spacing) * 3);
  }

  .ps-6 {
    padding-inline-start: calc(var(--spacing) * 6);
  }

  .ps-8 {
    padding-inline-start: calc(var(--spacing) * 8);
  }

  .ps-\[calc\(var\(--fd-layout-offset\)\+var\(--fd-sidebar-width\)\)\] {
    padding-inline-start: calc(var(--fd-layout-offset)  + var(--fd-sidebar-width));
  }

  .ps-px {
    padding-inline-start: 1px;
  }

  .pe-\(--fd-layout-offset\) {
    padding-inline-end: var(--fd-layout-offset);
  }

  .pe-2 {
    padding-inline-end: calc(var(--spacing) * 2);
  }

  .pe-4 {
    padding-inline-end: calc(var(--spacing) * 4);
  }

  .pt-0 {
    padding-top: calc(var(--spacing) * 0);
  }

  .pt-4 {
    padding-top: calc(var(--spacing) * 4);
  }

  .pt-8 {
    padding-top: calc(var(--spacing) * 8);
  }

  .pt-12 {
    padding-top: calc(var(--spacing) * 12);
  }

  .pt-14 {
    padding-top: calc(var(--spacing) * 14);
  }

  .pr-2\.5 {
    padding-right: calc(var(--spacing) * 2.5);
  }

  .pb-2 {
    padding-bottom: calc(var(--spacing) * 2);
  }

  .pb-4 {
    padding-bottom: calc(var(--spacing) * 4);
  }

  .pb-6 {
    padding-bottom: calc(var(--spacing) * 6);
  }

  .text-center {
    text-align: center;
  }

  .text-end {
    text-align: end;
  }

  .text-left {
    text-align: left;
  }

  .text-start {
    text-align: start;
  }

  .text-2xl {
    font-size: var(--text-2xl);
    line-height: var(--tw-leading, var(--text-2xl--line-height));
  }

  .text-3xl {
    font-size: var(--text-3xl);
    line-height: var(--tw-leading, var(--text-3xl--line-height));
  }

  .text-base {
    font-size: var(--text-base);
    line-height: var(--tw-leading, var(--text-base--line-height));
  }

  .text-lg {
    font-size: var(--text-lg);
    line-height: var(--tw-leading, var(--text-lg--line-height));
  }

  .text-sm {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .text-xs {
    font-size: var(--text-xs);
    line-height: var(--tw-leading, var(--text-xs--line-height));
  }

  .text-\[13px\] {
    font-size: 13px;
  }

  .text-\[15px\] {
    font-size: 15px;
  }

  .font-bold {
    --tw-font-weight: var(--font-weight-bold);
    font-weight: var(--font-weight-bold);
  }

  .font-medium {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .font-semibold {
    --tw-font-weight: var(--font-weight-semibold);
    font-weight: var(--font-weight-semibold);
  }

  .text-balance {
    text-wrap: balance;
  }

  .text-nowrap {
    text-wrap: nowrap;
  }

  .\[overflow-wrap\:anywhere\] {
    overflow-wrap: anywhere;
  }

  .whitespace-nowrap {
    white-space: nowrap;
  }

  .text-black {
    color: var(--color-black);
  }

  .text-fd-accent-foreground {
    color: var(--color-fd-accent-foreground);
  }

  .text-fd-card {
    color: var(--color-fd-card);
  }

  .text-fd-card-foreground {
    color: var(--color-fd-card-foreground);
  }

  .text-fd-foreground {
    color: var(--color-fd-foreground);
  }

  .text-fd-foreground\/30 {
    color: var(--color-fd-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-fd-foreground\/30 {
      color: color-mix(in oklab, var(--color-fd-foreground) 30%, transparent);
    }
  }

  .text-fd-foreground\/80 {
    color: var(--color-fd-foreground);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-fd-foreground\/80 {
      color: color-mix(in oklab, var(--color-fd-foreground) 80%, transparent);
    }
  }

  .text-fd-muted-foreground {
    color: var(--color-fd-muted-foreground);
  }

  .text-fd-popover-foreground {
    color: var(--color-fd-popover-foreground);
  }

  .text-fd-primary {
    color: var(--color-fd-primary);
  }

  .text-fd-primary-foreground {
    color: var(--color-fd-primary-foreground);
  }

  .text-fd-primary\/50 {
    color: var(--color-fd-primary);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .text-fd-primary\/50 {
      color: color-mix(in oklab, var(--color-fd-primary) 50%, transparent);
    }
  }

  .text-fd-secondary-foreground {
    color: var(--color-fd-secondary-foreground);
  }

  .text-indigo-600 {
    color: var(--color-indigo-600);
  }

  .text-neutral-200 {
    color: var(--color-neutral-200);
  }

  .text-white {
    color: var(--color-white);
  }

  .italic {
    font-style: italic;
  }

  .line-through {
    text-decoration-line: line-through;
  }

  .underline {
    text-decoration-line: underline;
  }

  .underline-offset-4 {
    text-underline-offset: 4px;
  }

  .opacity-0 {
    opacity: 0;
  }

  .opacity-10 {
    opacity: .1;
  }

  .opacity-70 {
    opacity: .7;
  }

  .shadow {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-lg {
    --tw-shadow: 0 10px 15px -3px var(--tw-shadow-color, #0000001a), 0 4px 6px -4px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-md {
    --tw-shadow: 0 4px 6px -1px var(--tw-shadow-color, #0000001a), 0 2px 4px -2px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-sm {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .shadow-xs {
    --tw-shadow: 0 1px 2px 0 var(--tw-shadow-color, #0000000d);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(1px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-2 {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .ring-gray-950\/5 {
    --tw-ring-color: #0307120d;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .ring-gray-950\/5 {
      --tw-ring-color: color-mix(in oklab, var(--color-gray-950) 5%, transparent);
    }
  }

  .outline {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .filter {
    filter: var(--tw-blur, ) var(--tw-brightness, ) var(--tw-contrast, ) var(--tw-grayscale, ) var(--tw-hue-rotate, ) var(--tw-invert, ) var(--tw-saturate, ) var(--tw-sepia, ) var(--tw-drop-shadow, );
  }

  .backdrop-blur-lg {
    --tw-backdrop-blur: blur(var(--blur-lg));
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-md {
    --tw-backdrop-blur: blur(var(--blur-md));
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .backdrop-blur-sm {
    --tw-backdrop-blur: blur(var(--blur-sm));
    backdrop-filter: var(--tw-backdrop-blur, ) var(--tw-backdrop-brightness, ) var(--tw-backdrop-contrast, ) var(--tw-backdrop-grayscale, ) var(--tw-backdrop-hue-rotate, ) var(--tw-backdrop-invert, ) var(--tw-backdrop-opacity, ) var(--tw-backdrop-saturate, ) var(--tw-backdrop-sepia, );
  }

  .transition {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to, opacity, box-shadow, transform, translate, scale, rotate, filter, -webkit-backdrop-filter, backdrop-filter, display, visibility, content-visibility, overlay, pointer-events;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[color\,box-shadow\] {
    transition-property: color, box-shadow;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-\[width\,height\] {
    transition-property: width, height;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-all {
    transition-property: all;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-colors {
    transition-property: color, background-color, border-color, outline-color, text-decoration-color, fill, stroke, --tw-gradient-from, --tw-gradient-via, --tw-gradient-to;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-opacity {
    transition-property: opacity;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .transition-transform {
    transition-property: transform, translate, scale, rotate;
    transition-timing-function: var(--tw-ease, var(--default-transition-timing-function));
    transition-duration: var(--tw-duration, var(--default-transition-duration));
  }

  .duration-100 {
    --tw-duration: .1s;
    transition-duration: .1s;
  }

  .duration-200 {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  .duration-300 {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .duration-1000 {
    --tw-duration: 1s;
    transition-duration: 1s;
  }

  .ease-in-out {
    --tw-ease: var(--ease-in-out);
    transition-timing-function: var(--ease-in-out);
  }

  .fade-in-0 {
    --tw-enter-opacity: 0;
  }

  .outline-none {
    --tw-outline-style: none;
    outline-style: none;
  }

  .select-none {
    -webkit-user-select: none;
    user-select: none;
  }

  .\[--fd-nav-height\:calc\(var\(--spacing\)\*14\)\] {
    --fd-nav-height: calc(var(--spacing) * 14);
  }

  .\[--fd-tocnav-height\:36px\] {
    --fd-tocnav-height: 36px;
  }

  .\[mask\:linear-gradient\(to_left\,var\(--background\)_var\(--fade-stop\)\,transparent\)\,_linear-gradient\(to_right\,var\(--background\)_var\(--fade-stop\)\,transparent\)\,_linear-gradient\(black\,black\)\] {
    mask: linear-gradient(to left, var(--background) var(--fade-stop), transparent), linear-gradient(to right, var(--background) var(--fade-stop), transparent), linear-gradient(black, black);
  }

  .\[mask\:linear-gradient\(to_top\,var\(--background\)_var\(--fade-stop\)\,transparent\)\,_linear-gradient\(to_bottom\,var\(--background\)_var\(--fade-stop\)\,transparent\)\,_linear-gradient\(black\,black\)\] {
    mask: linear-gradient(to top, var(--background) var(--fade-stop), transparent), linear-gradient(to bottom, var(--background) var(--fade-stop), transparent), linear-gradient(black, black);
  }

  .\[perspective\:2000px\] {
    perspective: 2000px;
  }

  .fade-in {
    --tw-enter-opacity: 0;
  }

  .transform-3d {
    transform-style: preserve-3d;
  }

  .zoom-in-95 {
    --tw-enter-scale: .95;
  }

  :is(.\*\:col-start-1 > *) {
    grid-column-start: 1;
  }

  :is(.\*\:row-start-1 > *) {
    grid-row-start: 1;
  }

  :is(.\*\:block > *) {
    display: block;
  }

  :is(.\*\:w-full > *) {
    width: 100%;
  }

  @media (hover: hover) {
    .group-hover\:opacity-100:is(:where(.group):hover *) {
      opacity: 1;
    }
  }

  .group-data-\[state\=open\]\:rotate-180:is(:where(.group)[data-state="open"] *) {
    rotate: 180deg;
  }

  .group-data-\[state\=open\]\/accordion\:rotate-90:is(:where(.group\/accordion)[data-state="open"] *) {
    rotate: 90deg;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:top-full:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    top: 100%;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:mt-1\.5:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    margin-top: calc(var(--spacing) * 1.5);
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:overflow-hidden:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    overflow: hidden;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:rounded-md:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    border-radius: var(--radius-md);
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:border:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    border-style: var(--tw-border-style);
    border-width: 1px;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:shadow:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    --tw-shadow: 0 1px 3px 0 var(--tw-shadow-color, #0000001a), 0 1px 2px -1px var(--tw-shadow-color, #0000001a);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:duration-200:is(:where(.group\/navigation-menu)[data-viewport="false"] *) {
    --tw-duration: .2s;
    transition-duration: .2s;
  }

  @media (hover: hover) {
    .peer-hover\:opacity-100:is(:where(.peer):hover ~ *) {
      opacity: 1;
    }
  }

  .file\:inline-flex::file-selector-button {
    display: inline-flex;
  }

  .file\:h-7::file-selector-button {
    height: calc(var(--spacing) * 7);
  }

  .file\:border-0::file-selector-button {
    border-style: var(--tw-border-style);
    border-width: 0;
  }

  .file\:bg-transparent::file-selector-button {
    background-color: #0000;
  }

  .file\:text-sm::file-selector-button {
    font-size: var(--text-sm);
    line-height: var(--tw-leading, var(--text-sm--line-height));
  }

  .file\:font-medium::file-selector-button {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .placeholder\:text-fd-muted-foreground::placeholder {
    color: var(--color-fd-muted-foreground);
  }

  .first\:pt-0:first-child {
    padding-top: calc(var(--spacing) * 0);
  }

  .last\:border-b-0:last-child {
    border-bottom-style: var(--tw-border-style);
    border-bottom-width: 0;
  }

  .last\:pb-0:last-child {
    padding-bottom: calc(var(--spacing) * 0);
  }

  .empty\:mb-0:empty {
    margin-bottom: calc(var(--spacing) * 0);
  }

  .empty\:hidden:empty {
    display: none;
  }

  @media (hover: hover) {
    .hover\:bg-fd-accent:hover {
      background-color: var(--color-fd-accent);
    }
  }

  @media (hover: hover) {
    .hover\:bg-fd-accent\/50:hover {
      background-color: var(--color-fd-accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-fd-accent\/50:hover {
        background-color: color-mix(in oklab, var(--color-fd-accent) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-fd-accent\/80:hover {
      background-color: var(--color-fd-accent);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-fd-accent\/80:hover {
        background-color: color-mix(in oklab, var(--color-fd-accent) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-fd-primary\/80:hover {
      background-color: var(--color-fd-primary);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-fd-primary\/80:hover {
        background-color: color-mix(in oklab, var(--color-fd-primary) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:bg-sky-700:hover {
      background-color: var(--color-sky-700);
    }
  }

  @media (hover: hover) {
    .hover\:bg-white\/20:hover {
      background-color: #fff3;
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:bg-white\/20:hover {
        background-color: color-mix(in oklab, var(--color-white) 20%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-fd-accent-foreground:hover {
      color: var(--color-fd-accent-foreground);
    }
  }

  @media (hover: hover) {
    .hover\:text-fd-accent-foreground\/80:hover {
      color: var(--color-fd-accent-foreground);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:text-fd-accent-foreground\/80:hover {
        color: color-mix(in oklab, var(--color-fd-accent-foreground) 80%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:text-fd-popover-foreground\/50:hover {
      color: var(--color-fd-popover-foreground);
    }

    @supports (color: color-mix(in lab, red, red)) {
      .hover\:text-fd-popover-foreground\/50:hover {
        color: color-mix(in oklab, var(--color-fd-popover-foreground) 50%, transparent);
      }
    }
  }

  @media (hover: hover) {
    .hover\:underline:hover {
      text-decoration-line: underline;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-80:hover {
      opacity: .8;
    }
  }

  @media (hover: hover) {
    .hover\:opacity-100:hover {
      opacity: 1;
    }
  }

  @media (hover: hover) {
    .hover\:shadow-2xl:hover {
      --tw-shadow: 0 25px 50px -12px var(--tw-shadow-color, #00000040);
      box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
    }
  }

  @media (hover: hover) {
    .hover\:transition-none:hover {
      transition-property: none;
    }
  }

  .focus\:ring-2:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(2px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus\:ring-sky-500:focus {
    --tw-ring-color: var(--color-sky-500);
  }

  .focus\:ring-white\/20:focus {
    --tw-ring-color: #fff3;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .focus\:ring-white\/20:focus {
      --tw-ring-color: color-mix(in oklab, var(--color-white) 20%, transparent);
    }
  }

  .focus\:ring-offset-2:focus {
    --tw-ring-offset-width: 2px;
    --tw-ring-offset-shadow: var(--tw-ring-inset, ) 0 0 0 var(--tw-ring-offset-width) var(--tw-ring-offset-color);
  }

  .focus\:ring-offset-black:focus {
    --tw-ring-offset-color: var(--color-black);
  }

  .focus\:outline-hidden:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  @media (forced-colors: active) {
    .focus\:outline-hidden:focus {
      outline-offset: 2px;
      outline: 2px solid #0000;
    }
  }

  .focus\:outline-none:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .focus-visible\:ring-\[3px\]:focus-visible {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(3px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  .focus-visible\:outline-1:focus-visible {
    outline-style: var(--tw-outline-style);
    outline-width: 1px;
  }

  .focus-visible\:outline-none:focus-visible {
    --tw-outline-style: none;
    outline-style: none;
  }

  .disabled\:pointer-events-none:disabled {
    pointer-events: none;
  }

  .disabled\:cursor-not-allowed:disabled {
    cursor: not-allowed;
  }

  .disabled\:opacity-50:disabled {
    opacity: .5;
  }

  .has-focus-visible\:bg-fd-accent:has(:focus-visible) {
    background-color: var(--color-fd-accent);
  }

  .has-\[\>svg\]\:px-2\.5:has( > svg) {
    padding-inline: calc(var(--spacing) * 2.5);
  }

  .has-\[\>svg\]\:px-3:has( > svg) {
    padding-inline: calc(var(--spacing) * 3);
  }

  .has-\[\>svg\]\:px-4:has( > svg) {
    padding-inline: calc(var(--spacing) * 4);
  }

  .data-\[active\=true\]\:font-medium[data-active="true"] {
    --tw-font-weight: var(--font-weight-medium);
    font-weight: var(--font-weight-medium);
  }

  .data-\[active\=true\]\:text-fd-primary[data-active="true"] {
    color: var(--color-fd-primary);
  }

  .data-\[collapsed\=false\]\:hidden[data-collapsed="false"] {
    display: none;
  }

  .data-\[empty\=true\]\:hidden[data-empty="true"] {
    display: none;
  }

  .data-\[motion\=from-end\]\:animate-fd-enterFromRight[data-motion="from-end"] {
    animation: var(--animate-fd-enterFromRight);
  }

  .data-\[motion\=from-end\]\:slide-in-from-right-52[data-motion="from-end"] {
    --tw-enter-translate-x: calc(52 * var(--spacing));
  }

  .data-\[motion\=from-start\]\:animate-fd-enterFromLeft[data-motion="from-start"] {
    animation: var(--animate-fd-enterFromLeft);
  }

  .data-\[motion\=from-start\]\:slide-in-from-left-52[data-motion="from-start"] {
    --tw-enter-translate-x: calc(52 * var(--spacing) * -1);
  }

  .data-\[motion\=to-end\]\:animate-fd-exitToRight[data-motion="to-end"] {
    animation: var(--animate-fd-exitToRight);
  }

  .data-\[motion\=to-end\]\:slide-out-to-right-52[data-motion="to-end"] {
    --tw-exit-translate-x: calc(52 * var(--spacing));
  }

  .data-\[motion\=to-start\]\:animate-fd-exitToLeft[data-motion="to-start"] {
    animation: var(--animate-fd-exitToLeft);
  }

  .data-\[motion\=to-start\]\:slide-out-to-left-52[data-motion="to-start"] {
    --tw-exit-translate-x: calc(52 * var(--spacing) * -1);
  }

  .data-\[motion\^\=from-\]\:animate-in[data-motion^="from-"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[motion\^\=from-\]\:fade-in[data-motion^="from-"] {
    --tw-enter-opacity: 0;
  }

  .data-\[motion\^\=to-\]\:animate-out[data-motion^="to-"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[motion\^\=to-\]\:fade-out[data-motion^="to-"] {
    --tw-exit-opacity: 0;
  }

  .data-\[orientation\=horizontal\]\:h-px[data-orientation="horizontal"] {
    height: 1px;
  }

  .data-\[orientation\=horizontal\]\:w-full[data-orientation="horizontal"] {
    width: 100%;
  }

  .data-\[orientation\=vertical\]\:h-full[data-orientation="vertical"] {
    height: 100%;
  }

  .data-\[orientation\=vertical\]\:w-px[data-orientation="vertical"] {
    width: 1px;
  }

  .data-\[side\=bottom\]\:slide-in-from-top-2[data-side="bottom"] {
    --tw-enter-translate-y: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=left\]\:slide-in-from-right-2[data-side="left"] {
    --tw-enter-translate-x: calc(2 * var(--spacing));
  }

  .data-\[side\=right\]\:slide-in-from-left-2[data-side="right"] {
    --tw-enter-translate-x: calc(2 * var(--spacing) * -1);
  }

  .data-\[side\=top\]\:slide-in-from-bottom-2[data-side="top"] {
    --tw-enter-translate-y: calc(2 * var(--spacing));
  }

  :is(.\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:ring-0 *)[data-slot="navigation-menu-link"]:focus {
    --tw-ring-shadow: var(--tw-ring-inset, ) 0 0 0 calc(0px + var(--tw-ring-offset-width)) var(--tw-ring-color, currentcolor);
    box-shadow: var(--tw-inset-shadow), var(--tw-inset-ring-shadow), var(--tw-ring-offset-shadow), var(--tw-ring-shadow), var(--tw-shadow);
  }

  :is(.\*\*\:data-\[slot\=navigation-menu-link\]\:focus\:outline-none *)[data-slot="navigation-menu-link"]:focus {
    --tw-outline-style: none;
    outline-style: none;
  }

  .data-\[state\=active\]\:border-fd-primary[data-state="active"] {
    border-color: var(--color-fd-primary);
  }

  .data-\[state\=active\]\:text-fd-primary[data-state="active"] {
    color: var(--color-fd-primary);
  }

  .data-\[state\=closed\]\:animate-accordion-up[data-state="closed"] {
    animation: accordion-up var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=closed\]\:animate-fd-accordion-up[data-state="closed"] {
    animation: var(--animate-fd-accordion-up);
  }

  .data-\[state\=closed\]\:animate-fd-collapsible-up[data-state="closed"] {
    animation: var(--animate-fd-collapsible-up);
  }

  .data-\[state\=closed\]\:animate-fd-dialog-out[data-state="closed"] {
    animation: var(--animate-fd-dialog-out);
  }

  .data-\[state\=closed\]\:animate-fd-exitToLeft[data-state="closed"] {
    animation: var(--animate-fd-exitToLeft);
  }

  .data-\[state\=closed\]\:animate-fd-fade-out[data-state="closed"] {
    animation: var(--animate-fd-fade-out);
  }

  .data-\[state\=closed\]\:animate-fd-nav-menu-out[data-state="closed"] {
    animation: var(--animate-fd-nav-menu-out);
  }

  .data-\[state\=closed\]\:animate-fd-popover-out[data-state="closed"] {
    animation: var(--animate-fd-popover-out);
  }

  .data-\[state\=closed\]\:animate-out[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=closed\]\:duration-300[data-state="closed"] {
    --tw-duration: .3s;
    transition-duration: .3s;
  }

  .data-\[state\=closed\]\:fade-out-0[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=closed\]\:slide-out-to-bottom[data-state="closed"] {
    --tw-exit-translate-y: 100%;
  }

  .data-\[state\=closed\]\:slide-out-to-left[data-state="closed"] {
    --tw-exit-translate-x: -100%;
  }

  .data-\[state\=closed\]\:slide-out-to-right[data-state="closed"] {
    --tw-exit-translate-x: 100%;
  }

  .data-\[state\=closed\]\:slide-out-to-top[data-state="closed"] {
    --tw-exit-translate-y: -100%;
  }

  .data-\[state\=closed\]\:zoom-out-95[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:animate-out:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="closed"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:fade-out-0:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="closed"] {
    --tw-exit-opacity: 0;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=closed\]\:zoom-out-95:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="closed"] {
    --tw-exit-scale: .95;
  }

  .data-\[state\=hidden\]\:animate-fd-fade-out[data-state="hidden"] {
    animation: var(--animate-fd-fade-out);
  }

  .data-\[state\=hidden\]\:animate-out[data-state="hidden"] {
    animation: exit var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=hidden\]\:fade-out[data-state="hidden"] {
    --tw-exit-opacity: 0;
  }

  .data-\[state\=open\]\:animate-accordion-down[data-state="open"] {
    animation: accordion-down var(--tw-duration, .2s) ease-out;
  }

  .data-\[state\=open\]\:animate-fd-accordion-down[data-state="open"] {
    animation: var(--animate-fd-accordion-down);
  }

  .data-\[state\=open\]\:animate-fd-collapsible-down[data-state="open"] {
    animation: var(--animate-fd-collapsible-down);
  }

  .data-\[state\=open\]\:animate-fd-dialog-in[data-state="open"] {
    animation: var(--animate-fd-dialog-in);
  }

  .data-\[state\=open\]\:animate-fd-enterFromLeft[data-state="open"] {
    animation: var(--animate-fd-enterFromLeft);
  }

  .data-\[state\=open\]\:animate-fd-fade-in[data-state="open"] {
    animation: var(--animate-fd-fade-in);
  }

  .data-\[state\=open\]\:animate-fd-nav-menu-in[data-state="open"] {
    animation: var(--animate-fd-nav-menu-in);
  }

  .data-\[state\=open\]\:animate-fd-popover-in[data-state="open"] {
    animation: var(--animate-fd-popover-in);
  }

  .data-\[state\=open\]\:animate-in[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=open\]\:bg-fd-accent\/50[data-state="open"] {
    background-color: var(--color-fd-accent);
  }

  @supports (color: color-mix(in lab, red, red)) {
    .data-\[state\=open\]\:bg-fd-accent\/50[data-state="open"] {
      background-color: color-mix(in oklab, var(--color-fd-accent) 50%, transparent);
    }
  }

  .data-\[state\=open\]\:duration-500[data-state="open"] {
    --tw-duration: .5s;
    transition-duration: .5s;
  }

  .data-\[state\=open\]\:fade-in-0[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .data-\[state\=open\]\:slide-in-from-bottom[data-state="open"] {
    --tw-enter-translate-y: 100%;
  }

  .data-\[state\=open\]\:slide-in-from-left[data-state="open"] {
    --tw-enter-translate-x: -100%;
  }

  .data-\[state\=open\]\:slide-in-from-right[data-state="open"] {
    --tw-enter-translate-x: 100%;
  }

  .data-\[state\=open\]\:slide-in-from-top[data-state="open"] {
    --tw-enter-translate-y: -100%;
  }

  .data-\[state\=open\]\:zoom-in-90[data-state="open"] {
    --tw-enter-scale: .9;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:animate-in:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="open"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:fade-in-0:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="open"] {
    --tw-enter-opacity: 0;
  }

  .group-data-\[viewport\=false\]\/navigation-menu\:data-\[state\=open\]\:zoom-in-95:is(:where(.group\/navigation-menu)[data-viewport="false"] *)[data-state="open"] {
    --tw-enter-scale: .95;
  }

  .data-\[state\=visible\]\:animate-in[data-state="visible"] {
    animation: enter var(--tw-duration, .15s) var(--tw-ease, ease);
  }

  .data-\[state\=visible\]\:fade-in[data-state="visible"] {
    --tw-enter-opacity: 0;
  }

  @media (width < 80rem) {
    .max-xl\:end-4 {
      inset-inline-end: calc(var(--spacing) * 4);
    }
  }

  @media (width < 80rem) {
    .max-xl\:hidden {
      display: none;
    }
  }

  @media (width < 64rem) {
    .max-lg\:hidden {
      display: none;
    }
  }

  @media (width < 48rem) {
    .max-md\:hidden {
      display: none;
    }
  }

  @media (width < 48rem) {
    .max-md\:pt-6 {
      padding-top: calc(var(--spacing) * 6);
    }
  }

  @media (width < 48rem) {
    .max-md\:pb-6 {
      padding-bottom: calc(var(--spacing) * 6);
    }
  }

  @media (width < 40rem) {
    .max-sm\:mt-2 {
      margin-top: calc(var(--spacing) * 2);
    }
  }

  @media (width < 40rem) {
    .max-sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:hidden {
      display: none;
    }
  }

  @media (width >= 40rem) {
    .sm\:h-6 {
      height: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 40rem) {
    .sm\:max-w-sm {
      max-width: var(--container-sm);
    }
  }

  @media (width >= 40rem) {
    .sm\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 40rem) {
    .sm\:items-center {
      align-items: center;
    }
  }

  @media (width >= 40rem) {
    .sm\:justify-end {
      justify-content: flex-end;
    }
  }

  @media (width >= 40rem) {
    .sm\:px-8 {
      padding-inline: calc(var(--spacing) * 8);
    }
  }

  @media (width >= 40rem) {
    .sm\:text-base {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }

  @media (width >= 40rem) {
    .sm\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:absolute {
      position: absolute;
    }
  }

  @media (width >= 48rem) {
    .md\:inset-y-2 {
      inset-block: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 48rem) {
    .md\:hidden {
      display: none;
    }
  }

  @media (width >= 48rem) {
    .md\:h-6 {
      height: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:w-\[var\(--radix-navigation-menu-viewport-width\)\] {
      width: var(--radix-navigation-menu-viewport-width);
    }
  }

  @media (width >= 48rem) {
    .md\:w-auto {
      width: auto;
    }
  }

  @media (width >= 48rem) {
    .md\:grid-cols-2 {
      grid-template-columns: repeat(2, minmax(0, 1fr));
    }
  }

  @media (width >= 48rem) {
    .md\:bg-transparent {
      background-color: #0000;
    }
  }

  @media (width >= 48rem) {
    .md\:px-6 {
      padding-inline: calc(var(--spacing) * 6);
    }
  }

  @media (width >= 48rem) {
    .md\:py-1\.5 {
      padding-block: calc(var(--spacing) * 1.5);
    }
  }

  @media (width >= 48rem) {
    .md\:ps-\(--fd-layout-offset\) {
      padding-inline-start: var(--fd-layout-offset);
    }
  }

  @media (width >= 48rem) {
    .md\:pt-12 {
      padding-top: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 48rem) {
    .md\:text-3xl {
      font-size: var(--text-3xl);
      line-height: var(--tw-leading, var(--text-3xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-4xl {
      font-size: var(--text-4xl);
      line-height: var(--tw-leading, var(--text-4xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-base {
      font-size: var(--text-base);
      line-height: var(--tw-leading, var(--text-base--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-sm {
      font-size: var(--text-sm);
      line-height: var(--tw-leading, var(--text-sm--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-xl {
      font-size: var(--text-xl);
      line-height: var(--tw-leading, var(--text-xl--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:text-xs {
      font-size: var(--text-xs);
      line-height: var(--tw-leading, var(--text-xs--line-height));
    }
  }

  @media (width >= 48rem) {
    .md\:\[--fd-nav-height\:0px\] {
      --fd-nav-height: 0px;
    }
  }

  @media (width >= 48rem) {
    .md\:\[--fd-sidebar-width\:268px\] {
      --fd-sidebar-width: 268px;
    }
  }

  @media (width >= 48rem) {
    .md\:\[--fd-sidebar-width\:286px\] {
      --fd-sidebar-width: 286px;
    }
  }

  @media (width >= 64rem) {
    .lg\:mt-2 {
      margin-top: calc(var(--spacing) * 2);
    }
  }

  @media (width >= 64rem) {
    .lg\:hidden {
      display: none;
    }
  }

  @media (width >= 64rem) {
    .lg\:h-10 {
      height: calc(var(--spacing) * 10);
    }
  }

  @media (width >= 64rem) {
    .lg\:h-12 {
      height: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 64rem) {
    .lg\:w-\[calc\(100\%-1rem\)\] {
      width: calc(100% - 1rem);
    }
  }

  @media (width >= 64rem) {
    .lg\:grid-cols-3 {
      grid-template-columns: repeat(3, minmax(0, 1fr));
    }
  }

  @media (width >= 64rem) {
    .lg\:flex-row {
      flex-direction: row;
    }
  }

  @media (width >= 64rem) {
    .lg\:items-center {
      align-items: center;
    }
  }

  @media (width >= 64rem) {
    .lg\:rounded-2xl {
      border-radius: var(--radius-2xl);
    }
  }

  @media (width >= 64rem) {
    .lg\:border {
      border-style: var(--tw-border-style);
      border-width: 1px;
    }
  }

  @media (width >= 64rem) {
    .lg\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:text-6xl {
      font-size: var(--text-6xl);
      line-height: var(--tw-leading, var(--text-6xl--line-height));
    }
  }

  @media (width >= 64rem) {
    .lg\:\[--fd-nav-height\:calc\(var\(--spacing\)\*24\)\] {
      --fd-nav-height: calc(var(--spacing) * 24);
    }
  }

  @media (width >= 64rem) {
    .lg\:\[--fd-sidebar-width\:286px\] {
      --fd-sidebar-width: 286px;
    }
  }

  @media (width >= 80rem) {
    .xl\:start-4 {
      inset-inline-start: calc(var(--spacing) * 4);
    }
  }

  @media (width >= 80rem) {
    .xl\:mx-auto {
      margin-inline: auto;
    }
  }

  @media (width >= 80rem) {
    .xl\:hidden {
      display: none;
    }
  }

  @media (width >= 80rem) {
    .xl\:h-12 {
      height: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 80rem) {
    .xl\:px-12 {
      padding-inline: calc(var(--spacing) * 12);
    }
  }

  @media (width >= 80rem) {
    .xl\:text-5xl {
      font-size: var(--text-5xl);
      line-height: var(--tw-leading, var(--text-5xl--line-height));
    }
  }

  @media (width >= 80rem) {
    .xl\:\[--fd-toc-width\:286px\] {
      --fd-toc-width: 286px;
    }
  }

  @media (width >= 80rem) {
    .xl\:\[--fd-tocnav-height\:0px\] {
      --fd-tocnav-height: 0px;
    }
  }

  @container (width < 32rem) {
    .\@max-lg\:col-span-full {
      grid-column: 1 / -1;
    }
  }

  .rtl\:translate-x-\(--fd-sidebar-offset\):where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    --tw-translate-x: var(--fd-sidebar-offset);
    translate: var(--tw-translate-x) var(--tw-translate-y);
  }

  .rtl\:-scale-x-100:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    --tw-scale-x: calc(100% * -1);
    scale: var(--tw-scale-x) var(--tw-scale-y);
  }

  .rtl\:rotate-180:where(:dir(rtl), [dir="rtl"], [dir="rtl"] *) {
    rotate: 180deg;
  }

  .dark\:bg-\(--shiki-dark-bg\):where(.dark, .dark *) {
    background-color: var(--shiki-dark-bg);
  }

  .dark\:bg-black\/40:where(.dark, .dark *) {
    background-color: #0006;
  }

  @supports (color: color-mix(in lab, red, red)) {
    .dark\:bg-black\/40:where(.dark, .dark *) {
      background-color: color-mix(in oklab, var(--color-black) 40%, transparent);
    }
  }

  .dark\:bg-\[linear-gradient\(to_bottom\,var\(--color-dark\)\,var\(--color-dark\)_50\%\,transparent_0\,transparent\)\]:where(.dark, .dark *) {
    background-image: linear-gradient(to bottom, var(--color-dark), var(--color-dark) 50%, transparent 0, transparent);
  }

  .dark\:bg-\[linear-gradient\(to_right\,var\(--color-dark\)\,var\(--color-dark\)_50\%\,transparent_0\,transparent\)\]:where(.dark, .dark *) {
    background-image: linear-gradient(to right, var(--color-dark), var(--color-dark) 50%, transparent 0, transparent);
  }

  .dark\:text-white:where(.dark, .dark *) {
    color: var(--color-white);
  }

  .\[\&_\.line\]\:px-4 .line {
    padding-inline: calc(var(--spacing) * 4);
  }

  .\[\&_\.line\]\:pl-3 .line {
    padding-left: calc(var(--spacing) * 3);
  }

  .\[\&_svg\]\:pointer-events-none svg {
    pointer-events: none;
  }

  .\[\&_svg\]\:\!size-4\.5 svg {
    width: calc(var(--spacing) * 4.5) !important;
    height: calc(var(--spacing) * 4.5) !important;
  }

  .\[\&_svg\]\:size-3\.5 svg {
    width: calc(var(--spacing) * 3.5);
    height: calc(var(--spacing) * 3.5);
  }

  .\[\&_svg\]\:size-4 svg {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&_svg\]\:size-4\.5 svg {
    width: calc(var(--spacing) * 4.5);
    height: calc(var(--spacing) * 4.5);
  }

  .\[\&_svg\]\:size-5 svg {
    width: calc(var(--spacing) * 5);
    height: calc(var(--spacing) * 5);
  }

  .\[\&_svg\]\:size-6\.5 svg {
    width: calc(var(--spacing) * 6.5);
    height: calc(var(--spacing) * 6.5);
  }

  .\[\&_svg\]\:shrink-0 svg {
    flex-shrink: 0;
  }

  @media (width >= 48rem) {
    .md\:\[\&_svg\]\:size-4\.5 svg {
      width: calc(var(--spacing) * 4.5);
      height: calc(var(--spacing) * 4.5);
    }
  }

  @media (width >= 48rem) {
    .md\:\[\&_svg\]\:size-5 svg {
      width: calc(var(--spacing) * 5);
      height: calc(var(--spacing) * 5);
    }
  }

  .\[\&_svg\:not\(\[class\*\=\'size-\'\]\)\]\:size-4 svg:not([class*="size-"]) {
    width: calc(var(--spacing) * 4);
    height: calc(var(--spacing) * 4);
  }

  .\[\&\>figure\:only-child\]\:-m-4 > figure:only-child {
    margin: calc(var(--spacing) * -4);
  }

  .\[\&\>figure\:only-child\]\:border-none > figure:only-child {
    --tw-border-style: none;
    border-style: none;
  }

  .\[\&\[data-state\=open\]\>svg\]\:rotate-180[data-state="open"] > svg {
    rotate: 180deg;
  }

  .uwu .\[\.uwu_\&\]\:hidden {
    display: none;
  }

  @media (hover: hover) {
    .\[\@media\(hover\:hover\)\]\:opacity-0 {
      opacity: 0;
    }
  }

  header .\[header_\&\]\:text-\[15px\] {
    font-size: 15px;
  }
}

.shiki:not(.not-fumadocs-codeblock *) code span {
  color: var(--shiki-light);
}

.shiki:not(.not-fumadocs-codeblock *) code .line {
  width: 100%;
  min-height: 1em;
  display: inline-block;
  position: relative;
}

.shiki:not(.not-fumadocs-codeblock *)[data-line-numbers] code .twoslash-meta-line {
  margin-left: calc(var(--spacing) * 7);
}

.shiki:not(.not-fumadocs-codeblock *)[data-line-numbers] code .line {
  width: calc(100% - 7 * var(--spacing));
  counter-increment: line;
  margin-left: calc(var(--spacing) * 7);
}

.shiki:not(.not-fumadocs-codeblock *)[data-line-numbers] code .line:after {
  content: counter(line);
  top: calc(var(--spacing) * 0);
  left: calc(var(--spacing) * -5);
  color: var(--color-fd-muted-foreground);
  position: absolute;
}

@supports (color: color-mix(in lab, red, red)) {
  .shiki:not(.not-fumadocs-codeblock *)[data-line-numbers] code .line:after {
    color: color-mix(in oklab, var(--color-fd-muted-foreground) 60%, transparent);
  }
}

.shiki:not(.not-fumadocs-codeblock *) code .diff:before {
  left: var(--spacing);
  position: absolute;
}

.shiki:not(.not-fumadocs-codeblock *) code .diff.remove {
  opacity: .7;
  background-color: var(--color-fd-diff-remove);
}

.shiki:not(.not-fumadocs-codeblock *) code .diff.remove:before {
  content: "-";
  color: var(--color-fd-diff-remove-symbol);
}

.shiki:not(.not-fumadocs-codeblock *) code .diff.add {
  background-color: var(--color-fd-diff-add);
}

.shiki:not(.not-fumadocs-codeblock *) code .diff.add:before {
  content: "+";
  color: var(--color-fd-diff-add-symbol);
}

.shiki:not(.not-fumadocs-codeblock *) code .diff {
  position: relative;
}

.shiki:not(.not-fumadocs-codeblock *) .highlighted {
  background-color: var(--color-fd-primary);
}

@supports (color: color-mix(in lab, red, red)) {
  .shiki:not(.not-fumadocs-codeblock *) .highlighted {
    background-color: color-mix(in oklab, var(--color-fd-primary) 10%, transparent);
  }
}

.shiki:not(.not-fumadocs-codeblock *) .highlighted-word {
  border: 1px solid var(--color-fd-primary);
  background-color: var(--color-fd-primary);
  border-radius: 2px;
  margin: -1px -3px;
  padding: 1px 2px;
}

@supports (color: color-mix(in lab, red, red)) {
  .shiki:not(.not-fumadocs-codeblock *) .highlighted-word {
    border: 1px solid color-mix(in oklab, var(--color-fd-primary) 50%, transparent);
    background-color: color-mix(in oklab, var(--color-fd-primary) 10%, transparent);
  }
}

.dark .shiki:not(.not-fumadocs-codeblock *) code span {
  color: var(--shiki-dark);
}

@property --radix-collapsible-content-height {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

:root {
  --color-fd-background: var(--signature-color-1);
  --signature-color-1: #a0312d;
  --signature-color-2: #fcf7f4;
  --tc: #00ff8c;
  --color-warning: var(--tc);
  --color-warning-foreground: var(--warning-foreground);
  --background: #2b2d31;
  --foreground: var(--signature-color-2);
  --card: var(--signature-color-1);
  --card-foreground: var(--signature-color-2);
  --popover: #2b2d31;
  --popover-foreground: var(--signature-color-2);
  --primary: #fff;
  --primary-foreground: #fdfdfd;
  --secondary: #a0312d;
  --secondary-foreground: var(--signature-color-2);
  --muted: #762320;
  --muted-foreground: #ffffff75;
  --accent: #a0312d;
  --accent-foreground: #fff;
  --destructive: #4000ff;
  --border: #84221e;
  --input: var(--tc);
  --ring: #c8ff00;
  --chart-1: #f4ff1b;
  --chart-2: #f4ff1b;
  --chart-3: #f4ff1b;
  --chart-4: #f4ff1b;
  --chart-5: #f4ff1b;
  --sidebar: #f4ff1b;
  --sidebar-foreground: #a0312d;
  --sidebar-primary: #000;
  --sidebar-primary-foreground: #f4ff1b;
  --sidebar-accent: #f4ff1b;
  --sidebar-accent-foreground: #fff;
  --sidebar-border: #f4ff1b;
  --sidebar-ring: #6f211e;
}

@font-face {
  font-family: PmPmFont;
  src: url("../media/gg_black.c72198d8.ttf") format("truetype");
}

@font-face {
  font-family: CA;
  src: url("../media/american_captain.87700bf1.ttf") format("truetype");
}

.font-1 {
  letter-spacing: .7px;
  font-family: PmPmFont, system-ui;
  font-weight: lighter;
}

.font-2 {
  letter-spacing: 0;
  font-family: CA, system-ui;
  font-weight: lighter;
}

.noteBox {
  background-color: #e76f511a;
  border: 1px solid #a0312d;
  border-radius: 5px;
  width: 100%;
  margin: 10px 0;
  padding: 10px;
}

.icon-coin {
  background-image: url("../media/pmpm-credit.ab1845cd.png");
  background-position: bottom;
  background-repeat: no-repeat;
  background-size: contain;
  width: 20px;
  height: 20px;
  display: inline-block;
}

.icon-credit {
  background-image: url("../media/pmpm-credit.ab1845cd.png");
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 30px;
  height: 30px;
  display: inline-block;
}

.icon-dice {
  background-image: url("../media/pmpm-dice.078e8e13.png");
  background-position: center;
  background-repeat: no-repeat;
  background-size: contain;
  width: 30px;
  height: 30px;
  display: inline-block;
}

@property --tw-border-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-translate-x {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-y {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-translate-z {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-scale-x {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-y {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-scale-z {
  syntax: "*";
  inherits: false;
  initial-value: 1;
}

@property --tw-rotate-x {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-y {
  syntax: "*";
  inherits: false
}

@property --tw-rotate-z {
  syntax: "*";
  inherits: false
}

@property --tw-skew-x {
  syntax: "*";
  inherits: false
}

@property --tw-skew-y {
  syntax: "*";
  inherits: false
}

@property --tw-space-x-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-divide-y-reverse {
  syntax: "*";
  inherits: false;
  initial-value: 0;
}

@property --tw-font-weight {
  syntax: "*";
  inherits: false
}

@property --tw-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-inset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-inset-ring-color {
  syntax: "*";
  inherits: false
}

@property --tw-inset-ring-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-ring-inset {
  syntax: "*";
  inherits: false
}

@property --tw-ring-offset-width {
  syntax: "<length>";
  inherits: false;
  initial-value: 0;
}

@property --tw-ring-offset-color {
  syntax: "*";
  inherits: false;
  initial-value: #fff;
}

@property --tw-ring-offset-shadow {
  syntax: "*";
  inherits: false;
  initial-value: 0 0 #0000;
}

@property --tw-outline-style {
  syntax: "*";
  inherits: false;
  initial-value: solid;
}

@property --tw-blur {
  syntax: "*";
  inherits: false
}

@property --tw-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-invert {
  syntax: "*";
  inherits: false
}

@property --tw-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-color {
  syntax: "*";
  inherits: false
}

@property --tw-drop-shadow-alpha {
  syntax: "<percentage>";
  inherits: false;
  initial-value: 100%;
}

@property --tw-drop-shadow-size {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-blur {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-brightness {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-contrast {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-grayscale {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-hue-rotate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-invert {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-opacity {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-saturate {
  syntax: "*";
  inherits: false
}

@property --tw-backdrop-sepia {
  syntax: "*";
  inherits: false
}

@property --tw-duration {
  syntax: "*";
  inherits: false
}

@property --tw-ease {
  syntax: "*";
  inherits: false
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  50% {
    opacity: .5;
  }
}

@keyframes fd-collapsible-down {
  from {
    opacity: 0;
    height: 0;
  }

  to {
    height: var(--radix-collapsible-content-height);
  }
}

@keyframes fd-collapsible-up {
  from {
    height: var(--radix-collapsible-content-height);
  }

  to {
    opacity: 0;
    height: 0;
  }
}

@keyframes fd-accordion-down {
  from {
    opacity: .5;
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height);
  }
}

@keyframes fd-accordion-up {
  from {
    height: var(--radix-accordion-content-height);
  }

  to {
    opacity: .5;
    height: 0;
  }
}

@keyframes fd-dialog-in {
  from {
    opacity: 0;
    transform: scale(1.06);
  }

  to {
    transform: scale(1);
  }
}

@keyframes fd-dialog-out {
  from {
    transform: scale(1);
  }

  to {
    opacity: 0;
    transform: scale(1.06);
  }
}

@keyframes fd-popover-in {
  from {
    opacity: 0;
    transform: translateY(-12px);
  }

  to {
    opacity: 1;
    transform: translateY(0);
  }
}

@keyframes fd-popover-out {
  from {
    opacity: 1;
    transform: translateY(0);
  }

  to {
    opacity: 0;
    transform: translateY(-12px);
  }
}

@keyframes fd-fade-in {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes fd-fade-out {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}

@keyframes fd-enterFromRight {
  from {
    opacity: 0;
    transform: translateX(200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fd-enterFromLeft {
  from {
    opacity: 0;
    transform: translateX(-200px);
  }

  to {
    opacity: 1;
    transform: translateX(0);
  }
}

@keyframes fd-exitToRight {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(200px);
  }
}

@keyframes fd-exitToLeft {
  from {
    opacity: 1;
    transform: translateX(0);
  }

  to {
    opacity: 0;
    transform: translateX(-200px);
  }
}

@keyframes fd-nav-menu-in {
  from {
    opacity: 0;
    height: 0;
  }

  to {
    opacity: 1;
    height: var(--radix-navigation-menu-viewport-height);
  }
}

@keyframes fd-nav-menu-out {
  from {
    opacity: 1;
    height: var(--radix-navigation-menu-viewport-height);
  }

  to {
    opacity: 0;
    height: 0;
  }
}

@keyframes enter {
  from {
    opacity: var(--tw-enter-opacity, 1);
    transform: translate3d(var(--tw-enter-translate-x, 0), var(--tw-enter-translate-y, 0), 0) scale3d(var(--tw-enter-scale, 1), var(--tw-enter-scale, 1), var(--tw-enter-scale, 1)) rotate(var(--tw-enter-rotate, 0));
  }
}

@keyframes exit {
  to {
    opacity: var(--tw-exit-opacity, 1);
    transform: translate3d(var(--tw-exit-translate-x, 0), var(--tw-exit-translate-y, 0), 0) scale3d(var(--tw-exit-scale, 1), var(--tw-exit-scale, 1), var(--tw-exit-scale, 1)) rotate(var(--tw-exit-rotate, 0));
  }
}

@keyframes accordion-down {
  from {
    height: 0;
  }

  to {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height, var(--reka-accordion-content-height, auto)));
  }
}

@keyframes accordion-up {
  from {
    height: var(--radix-accordion-content-height, var(--bits-accordion-content-height, var(--reka-accordion-content-height, auto)));
  }

  to {
    height: 0;
  }
}


/* [next]/internal/font/google/geist_31d04c35.module.css [app-client] (css) */
@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/gyByhwUxId8gMEwYGFWNOITddY4-s.b7d310ad.woff2") format("woff2");
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}

@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/gyByhwUxId8gMEwSGFWNOITddY4-s.81df3a5b.woff2") format("woff2");
  unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

@font-face {
  font-family: Geist;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/gyByhwUxId8gMEwcGFWNOITd-s.p.da1ebef7.woff2") format("woff2");
  unicode-range: U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: Geist Fallback;
  src: local(Arial);
  ascent-override: 95.94%;
  descent-override: 28.16%;
  line-gap-override: 0.0%;
  size-adjust: 104.76%;
}

.geist_31d04c35-module__N4WLWG__className {
  font-family: Geist, Geist Fallback;
  font-style: normal;
}

.geist_31d04c35-module__N4WLWG__variable {
  --font-sans: "Geist", "Geist Fallback";
}


/* [next]/internal/font/google/geist_mono_56c6efa4.module.css [app-client] (css) */
@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/or3nQ6H_1_WfwkMZI_qYFrMdmhHkjkotbA-s.cb6bbcb1.woff2") format("woff2");
  unicode-range: U+301, U+400-45F, U+490-491, U+4B0-4B1, U+2116;
}

@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/or3nQ6H_1_WfwkMZI_qYFrkdmhHkjkotbA-s.e32db976.woff2") format("woff2");
  unicode-range: U+100-2BA, U+2BD-2C5, U+2C7-2CC, U+2CE-2D7, U+2DD-2FF, U+304, U+308, U+329, U+1D00-1DBF, U+1E00-1E9F, U+1EF2-1EFF, U+2020, U+20A0-20AB, U+20AD-20C0, U+2113, U+2C60-2C7F, U+A720-A7FF;
}

@font-face {
  font-family: Geist Mono;
  font-style: normal;
  font-weight: 100 900;
  font-display: swap;
  src: url("../media/or3nQ6H_1_WfwkMZI_qYFrcdmhHkjko-s.p.be19f591.woff2") format("woff2");
  unicode-range: U+??, U+131, U+152-153, U+2BB-2BC, U+2C6, U+2DA, U+2DC, U+304, U+308, U+329, U+2000-206F, U+20AC, U+2122, U+2191, U+2193, U+2212, U+2215, U+FEFF, U+FFFD;
}

@font-face {
  font-family: Geist Mono Fallback;
  src: local(Arial);
  ascent-override: 74.67%;
  descent-override: 21.92%;
  line-gap-override: 0.0%;
  size-adjust: 134.59%;
}

.geist_mono_56c6efa4-module__C-REFG__className {
  font-family: Geist Mono, Geist Mono Fallback;
  font-style: normal;
}

.geist_mono_56c6efa4-module__C-REFG__variable {
  --font-mono: "Geist Mono", "Geist Mono Fallback";
}


/*# sourceMappingURL=%5Broot-of-the-server%5D__380d323a._.css.map*/